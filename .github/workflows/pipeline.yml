# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Deploment Pipeline

on: [push, pull_request]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [10.x, 12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --no-optional
      - run: npm run build --if-present
      - run: npm run test
      - run: npm run test:e2e
        env:
          CI: true

  # Dockerize and deploy
  # needs build-test
  # only for branches develop + master
  docker-build-and-push:
    needs: build-test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GCLOUD_GCR_SERVICE_KEY }}
        project_id: ${{ secrets.GCLOUD_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build
      run: |
        docker build . \
        --tag eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_SHA} \
    #--tag eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_REF#refs/heads/}
    # Push the Docker image to Google Container Registry
    - name: Publish
      if: endsWith(github.ref, '/develop') || endsWith(github.ref, '/master')
      run: |
        docker push eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_SHA}
    # docker push eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_REF#refs/heads/}

    # get cloud run name by branch
    - name: Set env to dev
      if: endsWith(github.ref, '/develop')
      run: |
        echo "::set-env name=CLOUD_RUN_NAME::dev-${{ secrets.GCLOUD_APP_NAME }}"
    - name: Set env to production
      if: endsWith(github.ref, '/master')
      run: |
        echo "::set-env name=CLOUD_RUN_NAME::${{ secrets.GCLOUD_APP_NAME }}"

    # Deploy image to Cloud Run
    - name: Deploy
      if: endsWith(github.ref, '/develop') || endsWith(github.ref, '/master')
      run: |-
        echo "deploy to cloud run $CLOUD_RUN_NAME" && \
        gcloud run deploy "$CLOUD_RUN_NAME" \
          --quiet \
          --region "europe-west1" \
          --image eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_SHA} \
          --platform "managed" \
          --allow-unauthenticated
